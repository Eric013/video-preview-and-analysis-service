frameworkVersion: ">=1.2.0 <2.0.0"

service: gif-bot-fb-service # NOTE: update this with your service name

provider:
  name: aws
  runtime: nodejs6.10
  profile: laardee
  region: us-east-1
  environment:
    SERVERLESS_STAGE: ${opt:stage, self:provider.stage}
    SERVERLESS_PROJECT: ${self:service}
    SERVERLESS_REGION: ${opt:region, self:provider.region}
    SESSION_TABLE_NAME: gif-bot-fb-${self:provider.environment.SERVERLESS_STAGE}
    FACEBOOK_BOT_VERIFY_TOKEN: ${self:custom.secrets.FACEBOOK_BOT_VERIFY_TOKEN}
    FACEBOOK_BOT_PAGE_ACCESS_TOKEN: ${self:custom.secrets.FACEBOOK_BOT_PAGE_ACCESS_TOKEN}
    DOWNLOAD_TOPIC: gif-bot-download-topic-${opt:stage, self:provider.stage}
    RENDER_BUCKET:
      Fn::ImportValue: video-service-render-bucket-${self:provider.environment.SERVERLESS_STAGE}
    SOURCE_BUCKET:
      Fn::ImportValue: video-service-source-bucket-${self:provider.environment.SERVERLESS_STAGE}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
      Resource:
        - "*"
    - Effect: Allow
      Action:
      - dynamodb:*
      Resource: arn:aws:dynamodb:${self:provider.environment.SERVERLESS_REGION}:*:*
    - Effect: Allow
      Action:
      - SNS:*
      Resource: arn:aws:sns:${self:provider.environment.SERVERLESS_REGION}:*:*
package:
  exclude:
    - test/**
    - .git/**
    - templates
  individually: true

functions:
  facebook:
    handler: facebook/index.handler
    timeout: 15
    events:
      - http:
          path: facebook
          method: get
      - http:
          path: facebook
          method: post
      - sns: arn:aws:sns:${self:provider.environment.SERVERLESS_REGION}:${self:custom.secrets.ACCOUNT}:video-render-ready-topic-${opt:stage, self:provider.stage} # fn import value not yet working in serverless
  download:
    handler: download/index.handler
    timeout: 180
    events:
      - sns: ${self:provider.environment.DOWNLOAD_TOPIC}
plugins:
  - serverless-mocha-plugin
  - serverless-plugin-optimize

custom:
  serverless-mocha-plugin:
    functionTemplate: templates/function.ejs
  secrets: ${file(../.secrets.yml)}

resources:
  Resources:
    SessionsTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.SESSION_TABLE_NAME}
